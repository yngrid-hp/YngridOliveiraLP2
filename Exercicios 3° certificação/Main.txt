namespace ExFunc
{
    class Program
    {
        static void Main(string[] args)
        {   
             
            int FuncQuantidade;
            double despesa_empresa = 0;
            string func;
             FuncEmpresa traba = new FuncEmpresa();
            Terceirizado terceirizado = new Terceirizado();
            Gerente gerente = new Gerente();
            int w = 0, x=0, y=0;
            List<Terceirizado> terc = new List<Terceirizado>();
            List<FuncEmpresa> trab = new List<FuncEmpresa>();
            List<Gerente> gere = new List<Gerente>();
            

            Console.WriteLine("Digite a quantidade de funcionários: ");
            FuncQuantidade = int.Parse(Console.ReadLine());
           
                  
            
            

            for (int i = 0; i < funcQuantidade; i++)
            {  
               Console.WriteLine("Digite se é um terceirizado, trabalhador ou gerente: ");
                func= Console.ReadLine();
               
                if (func == "trabalhador")
                {
                    double valeAlimentacaoTrabalhador = trabalhador._alimentacao();

                   Console.WriteLine("nome-> ");
                    terceirizado.Nome = Console.ReadLine();

                    Console.WriteLine("data nas-> ");
                    terceirizado.Datanasc = Console.ReadLine();

                    Console.Write("Matrícula-> ");
                    terceirizado.Matricula = Console.ReadLine();

                    Console.Write("cpf -> ");
                    terceirizado.Cpf = Console.ReadLine();

                    Console.Write("cnnpj-> ");
                    terceirizado.Cnpj = Console.ReadLine();

                    func.Add(trab);
                    x++;
                if (func == "terceirizado")
                {
                    Console.Write("nome-> ");
                    terceirizado.Nome = Console.ReadLine();

                    Console.WriteLine("data nasc-> ");
                    terceirizado.Data_nasc = Console.ReadLine();

                    Console.Write("Matrícula-> ");
                    terceirizado.Matricula = Console.ReadLine();

                    Console.Write("cpf -> ");
                    terceirizado.Cpf = Console.ReadLine();

                    Console.Write("cnnpj-> ");
                    terceirizado.Cnpj = Console.ReadLine();

                    terc.Add(terc);
                    x++;
                }

            

                else if (func == "gerente")
                {
                    Console.Write("Nome: ");
                    gerente.Nome = Console.ReadLine();

                    Console.Write("Matrícula: ");
                    gerente.Matricula = Console.ReadLine();

                    Console.Write("Data de Nascimento: ");
                    gerente.Data_nascimento = Console.ReadLine();

                    Console.Write("CPF: ");
                    gerente.Cpf = Console.ReadLine();

                    Console.WriteLine("Ramo: ");
                    gerente.Ramo= Console.ReadLine();

                     double valeAlimentacaoGerente = gerentes._alimentacao();

                    gerente.Add(gere);
                    y++;
                }

            }
             
                   if(traba.Llength > 0)
             {
                 Console.WriteLine(" Os Trabalhadores");
 

                      for (int k = 0; k < trabalhadores.Length; k++)
                {
                    double valeAlimentacaoTrabalhador = trabalhadores[k].vale_alimentacao();
                    Console.WriteLine("Nome: " + trabalhadores[k].Nome);
                    Console.WriteLine("Matrícula: " + trabalhadores[k].Matricula);
                    Console.WriteLine("Data de Nascimento: " + trabalhadores[k].Data_nascimento);
                    Console.WriteLine("CPF: " + trabalhadores[k].Cpf);
                    Console.WriteLine("Salário: " + trabalhadores[k].Salario());
                    Console.WriteLine("Vale Alimentação: " + valeAlimentacaoTrabalhador);
                    

                    despesa_empresa += trabalhadores[k].Salario() + trabalhadores[k]._alimentacao();
                }
             }


                if(terceirizados.Length> 0)
                {
                    Console.WriteLine("Dados Tercerizados:");
                    

                   for (int i = 0; i < terceirizados.Length; i++)
                   {
                    Console.WriteLine("Nome: " + terceirizados[i].Nome);
                    Console.WriteLine("Terceirizado: " + terceirizados[i].Matricula);
                    Console.WriteLine("Data de Nascimento: " + terceirizados[i].Data_nascimento);
                    Console.WriteLine("CPF: " + terceirizados[i].Cpf);
                    Console.WriteLine("CNPJ: " + terceirizados[i].Cnpj);
                  
                    }
                }
                
             if(gerentes.Length > 0)
              {
                
                Console.WriteLine("Os gerentes");
                

                for (int j = 0; j < gerentes.Count; j++)
                {
                    double valeAlimentacaoGerente = gerentes[j].vale_alimentacao();

                    Console.WriteLine("Nome" + gerentes[j].Nome);
                    Console.WriteLine("Matrícula: " + gerentes[j].Matricula);
                    Console.WriteLine("Data de Nascimento: " + gerentes[j].Data_nascimento);
                    Console.WriteLine("CPF: " + gerentes[j].Cpf);
                    Console.WriteLine("Salário: " + gerentes[j].Salario());
                    Console.WriteLine("Área de atuação: " + gerentes[j].AreaAtuacao);
                    Console.WriteLine("Vale Alimentação: " + valeAlimentacaoGerente);
                    
                    
                    despesa_empresa += gerentes[j].Salario() + valeAlimentacaoGerente;
                }
               }

             

               

                
                Console.WriteLine("Despesa Total da emprsa com salários dos servidores: " + despesa_da_empresa);
            }
            
        }
    }